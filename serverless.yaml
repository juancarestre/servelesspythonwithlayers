service: testpokemonspython

custom:

  owner: data
  appname: pokemonapiclient

  dev-region: us-east-1

  AWSProfile: juan
  env: ${opt:stage, self:provider.stage, 'dev'}
  AWSRegion: ${self:custom.${self:custom.env}-region}

  pokemon_api: "https://pokeapi.co/api/v2/pokemon/"


provider:
  name: aws
  runtime: python3.7
  profile: juan #"${self:customs.AWSProfile}"
  region: "${self:custom.AWSRegion}"
  environment:
    POKEMON_API_URL: "${self:customs.pokemon_api}"


package: 
  individually: true
  exclude:
    - "*/**"

layers:
  dependencies:
    # path: app/shared # required, path to layer contents on disk
    name: pokemons-dependencies # optional, Deployed Lambda layer name
    description: Dependencies
    compatibleRuntimes: # optional, a list of runtimes this layer is compatible with
      - python3.8
      - python3.7
    retain: false # optional, false by default. If true, layer versions are not deleted as new ones are created
    package:
      artifact: app/python.zip

functions:
  ditto:
    package:
      include:
        - app/f1/handler.py
    handler: app/f1/handler.lambda_handler
    layers:
      - { Ref: DependenciesLambdaLayer }

  pikachu:
    package:
      include:
        - app/f2/handler.py
    handler: app/f2/handler.lambda_handler
    layers:
      - { Ref: DependenciesLambdaLayer }

resources:
